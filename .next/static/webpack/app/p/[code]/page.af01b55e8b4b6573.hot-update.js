"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/p/[code]/page",{

/***/ "(app-pages-browser)/./app/p/[code]/components/ShareButton.jsx":
/*!*************************************************!*\
  !*** ./app/p/[code]/components/ShareButton.jsx ***!
  \*************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ ShareButton)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* __next_internal_client_entry_do_not_use__ default auto */ \n\nfunction ShareButton(param) {\n    let { url, title, cover } = param;\n    const text = title ? \"Je soutiens \\xab \".concat(title, \" \\xbb sur Fondeka\") : 'Je soutiens cette collecte sur Fondeka';\n    async function onShare() {\n        try {\n            var _navigator_canShare, _navigator;\n            // Try Web Share with FILE (best UX if supported + CORS allows fetching the image)\n            const files = await tryBuildShareFiles(cover);\n            if (files && typeof navigator !== 'undefined' && ((_navigator_canShare = (_navigator = navigator).canShare) === null || _navigator_canShare === void 0 ? void 0 : _navigator_canShare.call(_navigator, {\n                files\n            }))) {\n                await navigator.share({\n                    title: 'Fondeka',\n                    text,\n                    url,\n                    files\n                });\n                return;\n            }\n            // Fallback: classic Web Share with URL/text (most modern browsers)\n            if (typeof navigator !== 'undefined' && navigator.share) {\n                await navigator.share({\n                    title: 'Fondeka',\n                    text,\n                    url\n                });\n                return;\n            }\n            // Final fallback: copy URL to clipboard\n            await navigator.clipboard.writeText(url);\n            // Use a minimal, non-blocking toast if you want; keeping alert() for simplicity:\n            alert('Lien copié dans le presse-papiers');\n        } catch (e) {\n        // user cancelled or sharing failed — ignore\n        }\n    }\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n        type: \"button\",\n        className: \"chip\",\n        onClick: onShare,\n        \"aria-label\": \"Partager\",\n        style: {\n            display: 'inline-flex',\n            alignItems: 'center',\n            gap: 8,\n            fontWeight: 800,\n            color: '#4F805C'\n        },\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"svg\", {\n                width: \"16\",\n                height: \"16\",\n                viewBox: \"0 0 24 24\",\n                \"aria-hidden\": \"true\",\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                    d: \"M18 8a3 3 0 1 0-2.83-4H15a3 3 0 0 0 0 6c.54 0 1.05-.14 1.5-.38l-6 3a3 3 0 1 0 0 3l6 3A3 3 0 1 0 18 16a3 3 0 0 0-1.5.38l-6-3A3 3 0 0 0 10.5 12l6-3c.45.24.96.38 1.5.38Z\",\n                    fill: \"#4F805C\"\n                }, void 0, false, {\n                    fileName: \"/Users/deniskalengawatshipamba/Documents/projects/fondeka/fondeka-pay/app/p/[code]/components/ShareButton.jsx\",\n                    lineNumber: 42,\n                    columnNumber: 17\n                }, this)\n            }, void 0, false, {\n                fileName: \"/Users/deniskalengawatshipamba/Documents/projects/fondeka/fondeka-pay/app/p/[code]/components/ShareButton.jsx\",\n                lineNumber: 41,\n                columnNumber: 13\n            }, this),\n            \"Share\"\n        ]\n    }, void 0, true, {\n        fileName: \"/Users/deniskalengawatshipamba/Documents/projects/fondeka/fondeka-pay/app/p/[code]/components/ShareButton.jsx\",\n        lineNumber: 33,\n        columnNumber: 9\n    }, this);\n}\n_c = ShareButton;\n/**\n * Try to fetch the cover image and wrap it as a File for Web Share Level 2.\n * Requirements:\n *  - cover must be same-origin or CORS-enabled to allow fetch\n *  - size should be reasonably small (< ~10MB)\n *  - mime must be an image/* type\n */ async function tryBuildShareFiles(cover) {\n    try {\n        if (!cover) return null;\n        const res = await fetch(cover, {\n            mode: 'cors',\n            credentials: 'omit'\n        });\n        if (!res.ok) return null;\n        const contentType = res.headers.get('content-type') || '';\n        if (!contentType.startsWith('image/')) return null;\n        // Optional: reject very large images (some platforms fail silently on huge files)\n        const contentLength = Number(res.headers.get('content-length') || 0);\n        if (contentLength && contentLength > 10 * 1024 * 1024) return null; // 10MB cap\n        const blob = await res.blob();\n        const ext = guessExtFromMime(contentType);\n        const file = new File([\n            blob\n        ], \"fondeka-cover\".concat(ext), {\n            type: contentType\n        });\n        return [\n            file\n        ];\n    } catch (e) {\n        return null;\n    }\n}\nfunction guessExtFromMime(mime) {\n    if (mime.includes('png')) return '.png';\n    if (mime.includes('webp')) return '.webp';\n    if (mime.includes('jpeg') || mime.includes('jpg')) return '.jpg';\n    return '';\n}\nvar _c;\n$RefreshReg$(_c, \"ShareButton\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2FwcC9wL1tjb2RlXS9jb21wb25lbnRzL1NoYXJlQnV0dG9uLmpzeCIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUUwQjtBQUVYLFNBQVNDLFlBQVksS0FBcUI7UUFBckIsRUFBRUMsR0FBRyxFQUFFQyxLQUFLLEVBQUVDLEtBQUssRUFBRSxHQUFyQjtJQUNoQyxNQUFNQyxPQUFPRixRQUFRLG9CQUF1QixPQUFOQSxPQUFNLHVCQUFrQjtJQUU5RCxlQUFlRztRQUNYLElBQUk7Z0JBR2lEQyxxQkFBQUE7WUFGakQsa0ZBQWtGO1lBQ2xGLE1BQU1DLFFBQVEsTUFBTUMsbUJBQW1CTDtZQUN2QyxJQUFJSSxTQUFTLE9BQU9ELGNBQWMsaUJBQWVBLHNCQUFBQSxDQUFBQSxhQUFBQSxXQUFVRyxRQUFRLGNBQWxCSCwwQ0FBQUEseUJBQUFBLFlBQXFCO2dCQUFFQztZQUFNLEtBQUk7Z0JBQzlFLE1BQU1ELFVBQVVJLEtBQUssQ0FBQztvQkFBRVIsT0FBTztvQkFBV0U7b0JBQU1IO29CQUFLTTtnQkFBTTtnQkFDM0Q7WUFDSjtZQUVBLG1FQUFtRTtZQUNuRSxJQUFJLE9BQU9ELGNBQWMsZUFBZUEsVUFBVUksS0FBSyxFQUFFO2dCQUNyRCxNQUFNSixVQUFVSSxLQUFLLENBQUM7b0JBQUVSLE9BQU87b0JBQVdFO29CQUFNSDtnQkFBSTtnQkFDcEQ7WUFDSjtZQUVBLHdDQUF3QztZQUN4QyxNQUFNSyxVQUFVSyxTQUFTLENBQUNDLFNBQVMsQ0FBQ1g7WUFDcEMsaUZBQWlGO1lBQ2pGWSxNQUFNO1FBQ1YsRUFBRSxVQUFNO1FBQ0osNENBQTRDO1FBQ2hEO0lBQ0o7SUFFQSxxQkFDSSw4REFBQ0M7UUFDR0MsTUFBSztRQUNMQyxXQUFVO1FBQ1ZDLFNBQVNaO1FBQ1RhLGNBQVc7UUFDWEMsT0FBTztZQUFFQyxTQUFTO1lBQWVDLFlBQVk7WUFBVUMsS0FBSztZQUFHQyxZQUFZO1lBQUtDLE9BQU87UUFBVTs7MEJBR2pHLDhEQUFDQztnQkFBSUMsT0FBTTtnQkFBS0MsUUFBTztnQkFBS0MsU0FBUTtnQkFBWUMsZUFBWTswQkFDeEQsNEVBQUNDO29CQUFLQyxHQUFFO29CQUF5S0MsTUFBSzs7Ozs7Ozs7Ozs7WUFDcEw7Ozs7Ozs7QUFJbEI7S0ExQ3dCaEM7QUE0Q3hCOzs7Ozs7Q0FNQyxHQUNELGVBQWVRLG1CQUFtQkwsS0FBSztJQUNuQyxJQUFJO1FBQ0EsSUFBSSxDQUFDQSxPQUFPLE9BQU87UUFFbkIsTUFBTThCLE1BQU0sTUFBTUMsTUFBTS9CLE9BQU87WUFBRWdDLE1BQU07WUFBUUMsYUFBYTtRQUFPO1FBQ25FLElBQUksQ0FBQ0gsSUFBSUksRUFBRSxFQUFFLE9BQU87UUFFcEIsTUFBTUMsY0FBY0wsSUFBSU0sT0FBTyxDQUFDQyxHQUFHLENBQUMsbUJBQW1CO1FBQ3ZELElBQUksQ0FBQ0YsWUFBWUcsVUFBVSxDQUFDLFdBQVcsT0FBTztRQUU5QyxrRkFBa0Y7UUFDbEYsTUFBTUMsZ0JBQWdCQyxPQUFPVixJQUFJTSxPQUFPLENBQUNDLEdBQUcsQ0FBQyxxQkFBcUI7UUFDbEUsSUFBSUUsaUJBQWlCQSxnQkFBZ0IsS0FBSyxPQUFPLE1BQU0sT0FBTyxNQUFNLFdBQVc7UUFFL0UsTUFBTUUsT0FBTyxNQUFNWCxJQUFJVyxJQUFJO1FBQzNCLE1BQU1DLE1BQU9DLGlCQUFpQlI7UUFDOUIsTUFBTVMsT0FBTyxJQUFJQyxLQUFLO1lBQUNKO1NBQUssRUFBRSxnQkFBb0IsT0FBSkMsTUFBTztZQUFFOUIsTUFBTXVCO1FBQVk7UUFDekUsT0FBTztZQUFDUztTQUFLO0lBQ2pCLEVBQUUsVUFBTTtRQUNKLE9BQU87SUFDWDtBQUNKO0FBRUEsU0FBU0QsaUJBQWlCRyxJQUFJO0lBQzFCLElBQUlBLEtBQUtDLFFBQVEsQ0FBQyxRQUFRLE9BQU87SUFDakMsSUFBSUQsS0FBS0MsUUFBUSxDQUFDLFNBQVMsT0FBTztJQUNsQyxJQUFJRCxLQUFLQyxRQUFRLENBQUMsV0FBV0QsS0FBS0MsUUFBUSxDQUFDLFFBQVEsT0FBTztJQUMxRCxPQUFPO0FBQ1giLCJzb3VyY2VzIjpbIi9Vc2Vycy9kZW5pc2thbGVuZ2F3YXRzaGlwYW1iYS9Eb2N1bWVudHMvcHJvamVjdHMvZm9uZGVrYS9mb25kZWthLXBheS9hcHAvcC9bY29kZV0vY29tcG9uZW50cy9TaGFyZUJ1dHRvbi5qc3giXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBjbGllbnQnO1xuXG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBTaGFyZUJ1dHRvbih7IHVybCwgdGl0bGUsIGNvdmVyIH0pIHtcbiAgICBjb25zdCB0ZXh0ID0gdGl0bGUgPyBgSmUgc291dGllbnMgwqsgJHt0aXRsZX0gwrsgc3VyIEZvbmRla2FgIDogJ0plIHNvdXRpZW5zIGNldHRlIGNvbGxlY3RlIHN1ciBGb25kZWthJztcblxuICAgIGFzeW5jIGZ1bmN0aW9uIG9uU2hhcmUoKSB7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICAvLyBUcnkgV2ViIFNoYXJlIHdpdGggRklMRSAoYmVzdCBVWCBpZiBzdXBwb3J0ZWQgKyBDT1JTIGFsbG93cyBmZXRjaGluZyB0aGUgaW1hZ2UpXG4gICAgICAgICAgICBjb25zdCBmaWxlcyA9IGF3YWl0IHRyeUJ1aWxkU2hhcmVGaWxlcyhjb3Zlcik7XG4gICAgICAgICAgICBpZiAoZmlsZXMgJiYgdHlwZW9mIG5hdmlnYXRvciAhPT0gJ3VuZGVmaW5lZCcgJiYgbmF2aWdhdG9yLmNhblNoYXJlPy4oeyBmaWxlcyB9KSkge1xuICAgICAgICAgICAgICAgIGF3YWl0IG5hdmlnYXRvci5zaGFyZSh7IHRpdGxlOiAnRm9uZGVrYScsIHRleHQsIHVybCwgZmlsZXMgfSk7XG4gICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAvLyBGYWxsYmFjazogY2xhc3NpYyBXZWIgU2hhcmUgd2l0aCBVUkwvdGV4dCAobW9zdCBtb2Rlcm4gYnJvd3NlcnMpXG4gICAgICAgICAgICBpZiAodHlwZW9mIG5hdmlnYXRvciAhPT0gJ3VuZGVmaW5lZCcgJiYgbmF2aWdhdG9yLnNoYXJlKSB7XG4gICAgICAgICAgICAgICAgYXdhaXQgbmF2aWdhdG9yLnNoYXJlKHsgdGl0bGU6ICdGb25kZWthJywgdGV4dCwgdXJsIH0pO1xuICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgLy8gRmluYWwgZmFsbGJhY2s6IGNvcHkgVVJMIHRvIGNsaXBib2FyZFxuICAgICAgICAgICAgYXdhaXQgbmF2aWdhdG9yLmNsaXBib2FyZC53cml0ZVRleHQodXJsKTtcbiAgICAgICAgICAgIC8vIFVzZSBhIG1pbmltYWwsIG5vbi1ibG9ja2luZyB0b2FzdCBpZiB5b3Ugd2FudDsga2VlcGluZyBhbGVydCgpIGZvciBzaW1wbGljaXR5OlxuICAgICAgICAgICAgYWxlcnQoJ0xpZW4gY29wacOpIGRhbnMgbGUgcHJlc3NlLXBhcGllcnMnKTtcbiAgICAgICAgfSBjYXRjaCB7XG4gICAgICAgICAgICAvLyB1c2VyIGNhbmNlbGxlZCBvciBzaGFyaW5nIGZhaWxlZCDigJQgaWdub3JlXG4gICAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4gKFxuICAgICAgICA8YnV0dG9uXG4gICAgICAgICAgICB0eXBlPVwiYnV0dG9uXCJcbiAgICAgICAgICAgIGNsYXNzTmFtZT1cImNoaXBcIlxuICAgICAgICAgICAgb25DbGljaz17b25TaGFyZX1cbiAgICAgICAgICAgIGFyaWEtbGFiZWw9XCJQYXJ0YWdlclwiXG4gICAgICAgICAgICBzdHlsZT17eyBkaXNwbGF5OiAnaW5saW5lLWZsZXgnLCBhbGlnbkl0ZW1zOiAnY2VudGVyJywgZ2FwOiA4LCBmb250V2VpZ2h0OiA4MDAsIGNvbG9yOiAnIzRGODA1QycgfX1cbiAgICAgICAgPlxuICAgICAgICAgICAgey8qIHNoYXJlIGljb24gKi99XG4gICAgICAgICAgICA8c3ZnIHdpZHRoPVwiMTZcIiBoZWlnaHQ9XCIxNlwiIHZpZXdCb3g9XCIwIDAgMjQgMjRcIiBhcmlhLWhpZGRlbj1cInRydWVcIj5cbiAgICAgICAgICAgICAgICA8cGF0aCBkPVwiTTE4IDhhMyAzIDAgMSAwLTIuODMtNEgxNWEzIDMgMCAwIDAgMCA2Yy41NCAwIDEuMDUtLjE0IDEuNS0uMzhsLTYgM2EzIDMgMCAxIDAgMCAzbDYgM0EzIDMgMCAxIDAgMTggMTZhMyAzIDAgMCAwLTEuNS4zOGwtNi0zQTMgMyAwIDAgMCAxMC41IDEybDYtM2MuNDUuMjQuOTYuMzggMS41LjM4WlwiIGZpbGw9XCIjNEY4MDVDXCIvPlxuICAgICAgICAgICAgPC9zdmc+XG4gICAgICAgICAgICBTaGFyZVxuICAgICAgICA8L2J1dHRvbj5cbiAgICApO1xufVxuXG4vKipcbiAqIFRyeSB0byBmZXRjaCB0aGUgY292ZXIgaW1hZ2UgYW5kIHdyYXAgaXQgYXMgYSBGaWxlIGZvciBXZWIgU2hhcmUgTGV2ZWwgMi5cbiAqIFJlcXVpcmVtZW50czpcbiAqICAtIGNvdmVyIG11c3QgYmUgc2FtZS1vcmlnaW4gb3IgQ09SUy1lbmFibGVkIHRvIGFsbG93IGZldGNoXG4gKiAgLSBzaXplIHNob3VsZCBiZSByZWFzb25hYmx5IHNtYWxsICg8IH4xME1CKVxuICogIC0gbWltZSBtdXN0IGJlIGFuIGltYWdlLyogdHlwZVxuICovXG5hc3luYyBmdW5jdGlvbiB0cnlCdWlsZFNoYXJlRmlsZXMoY292ZXIpIHtcbiAgICB0cnkge1xuICAgICAgICBpZiAoIWNvdmVyKSByZXR1cm4gbnVsbDtcblxuICAgICAgICBjb25zdCByZXMgPSBhd2FpdCBmZXRjaChjb3ZlciwgeyBtb2RlOiAnY29ycycsIGNyZWRlbnRpYWxzOiAnb21pdCcgfSk7XG4gICAgICAgIGlmICghcmVzLm9rKSByZXR1cm4gbnVsbDtcblxuICAgICAgICBjb25zdCBjb250ZW50VHlwZSA9IHJlcy5oZWFkZXJzLmdldCgnY29udGVudC10eXBlJykgfHwgJyc7XG4gICAgICAgIGlmICghY29udGVudFR5cGUuc3RhcnRzV2l0aCgnaW1hZ2UvJykpIHJldHVybiBudWxsO1xuXG4gICAgICAgIC8vIE9wdGlvbmFsOiByZWplY3QgdmVyeSBsYXJnZSBpbWFnZXMgKHNvbWUgcGxhdGZvcm1zIGZhaWwgc2lsZW50bHkgb24gaHVnZSBmaWxlcylcbiAgICAgICAgY29uc3QgY29udGVudExlbmd0aCA9IE51bWJlcihyZXMuaGVhZGVycy5nZXQoJ2NvbnRlbnQtbGVuZ3RoJykgfHwgMCk7XG4gICAgICAgIGlmIChjb250ZW50TGVuZ3RoICYmIGNvbnRlbnRMZW5ndGggPiAxMCAqIDEwMjQgKiAxMDI0KSByZXR1cm4gbnVsbDsgLy8gMTBNQiBjYXBcblxuICAgICAgICBjb25zdCBibG9iID0gYXdhaXQgcmVzLmJsb2IoKTtcbiAgICAgICAgY29uc3QgZXh0ICA9IGd1ZXNzRXh0RnJvbU1pbWUoY29udGVudFR5cGUpO1xuICAgICAgICBjb25zdCBmaWxlID0gbmV3IEZpbGUoW2Jsb2JdLCBgZm9uZGVrYS1jb3ZlciR7ZXh0fWAsIHsgdHlwZTogY29udGVudFR5cGUgfSk7XG4gICAgICAgIHJldHVybiBbZmlsZV07XG4gICAgfSBjYXRjaCB7XG4gICAgICAgIHJldHVybiBudWxsO1xuICAgIH1cbn1cblxuZnVuY3Rpb24gZ3Vlc3NFeHRGcm9tTWltZShtaW1lKSB7XG4gICAgaWYgKG1pbWUuaW5jbHVkZXMoJ3BuZycpKSByZXR1cm4gJy5wbmcnO1xuICAgIGlmIChtaW1lLmluY2x1ZGVzKCd3ZWJwJykpIHJldHVybiAnLndlYnAnO1xuICAgIGlmIChtaW1lLmluY2x1ZGVzKCdqcGVnJykgfHwgbWltZS5pbmNsdWRlcygnanBnJykpIHJldHVybiAnLmpwZyc7XG4gICAgcmV0dXJuICcnO1xufVxuIl0sIm5hbWVzIjpbIlJlYWN0IiwiU2hhcmVCdXR0b24iLCJ1cmwiLCJ0aXRsZSIsImNvdmVyIiwidGV4dCIsIm9uU2hhcmUiLCJuYXZpZ2F0b3IiLCJmaWxlcyIsInRyeUJ1aWxkU2hhcmVGaWxlcyIsImNhblNoYXJlIiwic2hhcmUiLCJjbGlwYm9hcmQiLCJ3cml0ZVRleHQiLCJhbGVydCIsImJ1dHRvbiIsInR5cGUiLCJjbGFzc05hbWUiLCJvbkNsaWNrIiwiYXJpYS1sYWJlbCIsInN0eWxlIiwiZGlzcGxheSIsImFsaWduSXRlbXMiLCJnYXAiLCJmb250V2VpZ2h0IiwiY29sb3IiLCJzdmciLCJ3aWR0aCIsImhlaWdodCIsInZpZXdCb3giLCJhcmlhLWhpZGRlbiIsInBhdGgiLCJkIiwiZmlsbCIsInJlcyIsImZldGNoIiwibW9kZSIsImNyZWRlbnRpYWxzIiwib2siLCJjb250ZW50VHlwZSIsImhlYWRlcnMiLCJnZXQiLCJzdGFydHNXaXRoIiwiY29udGVudExlbmd0aCIsIk51bWJlciIsImJsb2IiLCJleHQiLCJndWVzc0V4dEZyb21NaW1lIiwiZmlsZSIsIkZpbGUiLCJtaW1lIiwiaW5jbHVkZXMiXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./app/p/[code]/components/ShareButton.jsx\n"));

/***/ })

});